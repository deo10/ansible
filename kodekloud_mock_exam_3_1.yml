# We have 2 managed nodes that are part of different DNS domains with a distinct DNS
# server for each. Using the sample resolv.conf located at ~/playbooks/dns,
# generate a new resolv.conf file and copy it to the respective nodes using
# the template module.


# Update the template file located at ~/playbooks/dns/templates/resolv.conf.j2
# to print the nameserver details as shown in the sample_resolv.conf file.
# DNS server to be used is specified in the inventory file.
# Use this template to create a playbook called update_dns_server.yml.
# This playbook should generate the new resolv.conf and copy to
# the temp file /tmp/resolv.conf on the respective nodes.

# inventory: 
# node00 ansible_host=172.20.1.100 ansible_ssh_pass=Passw0rd ansible_user=root
# node01 ansible_host=172.20.1.101 ansible_ssh_pass=Passw0rd ansible_user=root

# dns/inventory: 
# [storage_nodes] 
# node00 ansible_host=172.20.1.100 ansible_ssh_pass=Passw0rd ansible_user=root dns_server=172.20.1.53
# node01 ansible_host=172.20.1.101 ansible_ssh_pass=Passw0rd ansible_user=root dns_server=8.8.8.8


# dns/sample_resolv.conf: 
# nameserver 10.61.56.199
# options ndots:



# ~/playbooks/dns/templates/resolv.conf.j2:
# nameserver  {{ dns_server }};
# options ndots:0


# update_dns_server.yml:
---
- hosts: all
  become: true
  tasks:
    - name: update_dns_server
      template:
        src: resolv.conf.j2
        dest: /tmp/resolv.conf